- models [X]:
  - user [X]
  - client [X]
  - oauthtoken [X]
  - oauthcode [X]
  -  oauthscope [X]
- auth [ ]:
  - routes [X]
  - ui [ ]:
    - sign-up [X]
    - mail/passcode [X]
    - registration_passcode [X] 
    - mail/invite [X]
    - invite [X] 
    - login [X] 
    - login_passcode [X] 
    - reset-password [X] 
    - reset-passwod_instructions [X] 
    - reset-passwod_new-pass [X] 
    - reset-passwod_completed [X] 
    - reset-password_link [X]
    - testing [X]
  - oauth2 metadata and oidc url [X]:
    - authorization url [X]
    - token url [X]
    - introspection url [X] - waste of time
    - userinfo url [X]
  - oauth authorization_code flow  [X]:
    - testing [X]
  - bring irc server back up to IRCv3 spec [ ]:
    - sasl oauthbearer [/]:
      - protocol [/] (move to `saslmechanisms`)
      - ~introspect token, verify user~ [-]
      - get _userinfo_, verify user [X]:
        - split AUTHENTICATE OAUTHBEARER payload properly... [X]
    - sasl external [X]:
      - testing in console [X]
  - kiwiirc [ ]:
    - ircv3 [ ]:
      - make chathistory work [X]
      - multiline [X]
      - default theme [X]
      - fix names/channel list [X]
      - message info [X]
      - message replies [X]:
        - reply button (set context, render some UI there in buffer state) [X]
        - add tag to message when sent, unset buffer context [X]
        - on messges with draft/reply tag, reference message with clickable linkback [X]:
          - actually do UI [X]
      - invite/banlist audit fix [X]
      - message reacts [X]:
        - ui click handling properly [/]
        - message redaction (remove reactions) [ ]
      - sasl anonymous [X]
      - nicknamespaced state [X]
      - standard replies [/]
      - fix chathistory scrollback for non-ui messages [ ]
      - more emoji picker patches [/]
      - message redaction/react removal [X]
      - echo-message [X]
      - labeled responses [/]:
        - message prepend addon (show accumulated labeled responses) [ ]
      - uri proto handlers [ ]
      - vid chat [/]:
        - ~ctcp+tags~ tagmsg to broker webrtc cnx [X]
        - toggle audio [X]
        - toggle video [X]
        - pin/unpin [X]
        - no cam/avatar/styling [X]
        - audio visualization [X]
        - control bar styling [X]
        - stream from video el [X]
        - screen-share [X]
        - duplicating vids issue/general video state fixes [X]
        - flip screen issues [X]
        - perfect negotiation/leaving/rejoining call/channel state/modes [X]
        - tensorflow+bodypix for backgrounds [X]
        - ~vosklet for transcription [ ]~
        - SpeechRecognition for transcription [/]
        - ~transcribe to SOFTCHAN [ ]~
        - screensharing deduplication/restriction [X]
        - avatar audio visualization [X]
        - remote stream restriction (only 2) [X]
        - settings styling... [/]
        - mobile styling (packed tiles/videos, like Discord) [/]:
          - just better styling [X]
          - css grid [X]
        - pinning styling [/]:
          - resizing fixed [X]
          - persistent unpin btn (on mobile at least) [ ]
        - ~medium-zoom~ panzoom [/]:
          - implement [X]
          - touch patch [X]
        - volume indicator [ ]:
          - canvas not fkin svg [ ]
          - calibrate [ ]
        - audio visualization [ ]:
          - bar width variation based on amplitude/value [ ]
          - calibrate [ ]
        - performance [X]:
          - render based on visibility [X]
          - declutter/refactor [ ]
        - fix emoji picker clipping... [X]
        - video controls patch [/]:
          - click/hover patch [X]
          - dynamically show/hide button details [ ]
        - user tlc [/]:
          - double clicking vid should [ ]:
            - pan/zoom to [ ]
            - open user box [ ]
          - clicking user/nick link in buffer/channel list should [ ]:
            - pan/zoom to [ ]
          - show nick on hover [/]:
            - show nick [X]
            - on hover ? [ ]
        - hooplah [X]:
          - buffer messages [/]:
            - notice (show join button on +W chans) [/]:
              - server [X]:
                - send on join [/]:
                  - sends msg... [X]
                  - needs to use channel-context param [ ]
                - send on +W [X]
            - conditionally show call btn based on chan mode [X]
            - +/- x - `user has joined/left the call` [X]
            - +/- W - `user has started a/ended`the conference call` [X]
        - background settings [/]:
          - blur toggling ;D [X]
        - drag-resizable mediaviewer [X]
        - responsiveness [X]
        - random screenshare bug [ ]
        - match vid/tile order to buffer order [ ]
        - rearranging vids somehow [ ]
      - chathistory patch [X]:
        - dedupe messages (also just dont save dupes in first place) [X]
        - fix interleaving batches [X](https://github.com/kiwiirc/irc-framework/pull/385)
      - scroll-to-bottom UI [X]
      - custom uri proto handler/url handler/push-state... [ ]:
        - server spa routing [X]:
          - route /kiwi/* routes to kiwiIRC [X]
          - OAuth client redirect URI globbing [X]
        - pushstate... [X]:
          - figure out back btn shat [X]
          - active.component [X]:
            - push state when active component called [X]
            - go back 1 when active component called with null ? [X]
          - buffer [X]:
            - replace state [X]
          - onpopstate [X]:
            - if no previous state/page, go to server buffer [X]:
              - if in server buffer, leave page [X]
        - autoopen [/]:
          - buffer [X]:
            - /<CHANPREFIX>chan [X]
          - nick/pm [X]:
            - /@nick but also question mark param [X]
          - messageId [/]:
            - /buffer or ?nick= + &msgid=<msgid> [X]
            - need to figure out chathistory for specific msgid... [ ]
      - account registration spec [ ]:
        - server impl [ ]:
          - account register command (email, username optional, password optional) [ ]: 
            - send passcode to user
          - verify [ ]:
            - validate passcode against one emailed [ ]
            - create user/account [ ]
            - set sasl state/log user in [ ]
        - kiwiirc plugin/ui [ ]
      - labeled responses [X]:
        - proxy wrap user/server [X]
        - kiwi.state.addMessage add to labeled buffer if exists over server buffer [X]
      - standard replies [X]:
        - irc-framework PR [X](https://github.com/kiwiirc/irc-framework/pull/386)
        - kiwi UI [X]:
          - render [X](https://github.com/ItsOnlyBinary/kiwiirc/pull/17/commits/5b37383f3ad311498efd69eb7f3537c1f5ffff44)
          - format [X](https://github.com/ItsOnlyBinary/kiwiirc/pull/17/commits/20b2b7eb1f55086aae2012ca2b2e9d29a1bd1b60)
          - style  [X](https://github.com/ItsOnlyBinary/kiwiirc/pull/17/commits/a5b6fa492766c79ef3e12a7c40231079300340eb)
      - sign in message plugin [/]:
        - sign in [ ]:
          - username [ ]
          - password [ ]
          - auth plain [ ]
        - sign in with Google [X]:
          - lou.network passport-google [X]
          - redirect to lou.network passport-google /oauth/authorize endpoint [X]
          - redirect to Google (passport dance) [X]
          - on redirect back, redirect back to lou.network [X]
        - sign in with LinkedIn [X]
        - sign in with GitHub [X]
        - ~sign in with SourceHut [ ]~ No GraphQL
        - pull suggested username [X]
        - sign up [ ]:
          - account registration [ ]
        - kiwi [X]:
          - plugin [X]:
            - btns for: google, github, linkedin, lou [X]
        - /auth/login [X]:
          - sign in with: google, github, linkedin btns [X]
      - fix modes/anon user sht... [X]:
        - patch mode processing [X]
        - permissions (which modes user set, which modes server/db/admin set) [X]
        - set R mode by default on new users [X]
        - test R mode [X]
      - /kiwi /kiwi/kiwi redirect issues [X]
      - oauth sasl autoreconnect issue [X]
      - search cmd [/]:
      https://github.com/piboistudios/hxgenpe
        
        - search UI [/]:
          - result listing/*search buffer [X]:
            - plugin hijack kiwi.state.addMessage [X]:
              - if message?.batch?.type === 'search' [X]:
                - change buffer to '*search' buffer [X]
                - set message.time to -1 [X]
            - hijack kiwi.state.addBuffer [X]:
              - if buffer === '*search' [X]:
                - set buffer.show_input = false [X]
          - ~state browser plugin [ ]~ just auto-show *search buf for now [X]:
            - search button (open *search buffer) [ ]
          - form [X]:
            - kiwi buffer.special.*.control addUi plugin [X]
            - search bar [X]
              - text [X]
            - view older [ ]:
              - updates before/after [ ]
            - advanced settings [X]
              - in [X]
              - from [X]
              - before [X]
              - after [X]
          - server impl [/]:
            - do query [/]:
              - basics [X]
              - fix daterange query [X]
              - batches [X]
            - authz guards [X]
          - ui/ux [/]:
            - clear buffer on batch start search [X]
            - move all non-search messages to * buffer [X]
            - highlight search matches [ ]
            - jump to message [ ]:
               - call ircClient.chathistory.around(target, msgTs) [X]
               - add msg to buffer [X]
               - open buffer [X]
               - buffer.maybeScrollToId(msgid) [X]
               - dont fetch chathistory automatically when joining on search [X]
            - ~group messages by buffer~ show buffer/target [X]
          - show time from message tag? [X]
          - styling review [ ]
            
        - infinity scroll [/]:
          - unseen_messages/intersection observer [X]
          - replace unread_messages with getter [X]
          - make sure batch gets passed to all buffer messages [X]
          - fetch when msgs with marker read/seen [X]
            - when one of messages at top end is seen [/]:
              - ircClient.chathistory.before(target, firstMsgTs) [X]
            - when one of messages at bottom end is seen [X]:
              - ircClient.chathistory.after(target, lastMsgTs) [X]
            - debounce or something [/] (maybe unnecessary)
            - when scroll loading, don't stick to top/maintain scroll pos [X]
            - multiline/chathistory edgecase... [ ]
            - match chathistory/search authz [ ]
            - respond to chathistory with empty batch anyway [ ]
            - fix setting up listeners... [ ]
            - de-wonk search jump to message [/]
            - patch chathistory promise (listen for labeled response/standard reply) [ ]
            - chathistory promise, race timeout [X]
            - scroll adjustment on chathistory scroll loads [ ]:
              - messagelist overflow hidden while loading (with timeout race) [ ]
              - render loading ui [ ]:
                - kiwi messagelist append addons or w/e [ ]
            - clear buffer when swapping active buffer if more than msg threshhold [ ]
          # - chathistory on scroll to top/bottom [ ]
          - update clearMessages [ ]
          - buffer request scrollback between/before/after [ ]
        # - buffer timeslicing [ ]:
          # - buffer.requestContext(before, after) [ ]
      - chathistory targets [X]:
         - implement server side [X]
         - UI/client-side [X]:
            - statebrowserbuffer plugins [X]:
              - styling (and theme GH icon) [X]
              - next to chan name [X]
              - listen for raw CHATHISTORY TARGETS <buffer> <timestamp> events [X]:
                - set kiwi.state.getActiveNetwork().bufferByName(<buffer>).flags.last_known_message = <timestamp> [X]
                - render plugin if buffer.flags.last_known_message [X]
      - draft/persistence [ ]:
        - store user channels/buffers in user.meta [ ]
        - autorejoin on SASL (to user only) [ ]
        - auto targets on join [ ]:
          - getOrAddBuffer [ ]
      - auth touches [ ]:
        - sign in via lou.network [ ]
        - lou.network login -> continue without signing in [ ]
      - labeled response [ ]:
        - ACK UI [ ]
      - patch URI protocol handler [X]
      - meeting/channel connection [ ]:
        - show meeting chan in conference/media viewer [ ]
        - dont allow joining a difference conference while one is ongoing [ ]
      - reply/react ux [ ]:
        - esc to escape msg focus/reply/react state [ ]
        - reset reply/react state on message sent/state canceled [ ]
      - INVITES GO OUT [ ]
      - oauth failure pages [ ]
      - browser capability check/fallback uis [ ]
      - error page in general [ ]
      - performance issues with chathistory [X]
      - mode validation [/]
      - channel context [ ]
      - read-marker [ ]
      - channel rename [ ]
      - sasl v3.2 [/]
      - account-extban [ ]
      - account-notify [ ]
      - account-tag [X]
      - extended-join [ ]
      - away-notify [ ]
      - threading [ ]
      - netsplit/netjoin [ ]
      - message-redaction [X]
      - scroll-to-bottom ui when new/unread messages in buffer [/]:
        - shows [X]
        - show on new/unread [ ]
      - pre-away [ ]
      - invite-notify [ ] 
      - no implicit names [ ]
      - monitor [ ]
      - SNI [ ]
      - STS [ ]
      - make mediaviewer resziable [X]
    - irc in general [ ]:
      - channel modes [ ]
      - user modes [ ]
      - refactor [ ]:
        - auth middleware
    - pwa (please god work) [ ]:
      - history api/push state for mobile [ ]:
        - entrypoint routes (custom uri protocol handlers)      
  - irc:
    - sasl [ ]:
      - use `saslmechanisms` [ ]
      - sasl scram-sha-256 [ ]
      - sasl oauthbearer [ ]
      - sasl xoauth2 [ ]
      - sasl x-oauth2 [ ]
      - sasl otp [ ]
  
